// array of all color btns
var btnColors = ['green', 'red', 'yellow', 'blue'];

// array for game generated pattern and userClickedPattern
var gamePattern = [];
var userClickedPattern = [];

// setting a switch, when a key is pressed then start the game
var started = false;

var userSelectedColor;

// defining the levels of each pattern generated by the game
var level = 0;

// onclick event for simon-instructions.html page
$(document).on('click', function () {
  $('.welcome-title').fadeOut(1000);
  $('.display-on-load').show();
});

// onscroll event for simon-instructions.html page
$(document).scroll(function () {
  $('.welcome-title').fadeOut(1000);
  $('.display-on-load').show();
});

// onkeypress event for simon-instructions.html page as well as for simon-game.html page
$(document).keypress(function () {
  $('.welcome-title').fadeOut(1000);
  $('.display-on-load').show();

  // start the game pattern when the landing page is simon-game.html and detect the first keypress
  if (!started && location.pathname.split('/').includes('simon-game.html')) {

    // simonGame() to start the game pattern sequence
    simonGame();

    // key is now pressed setting started=true so that no other key
    // should be pressed untill the game is over
    started = true;
  }
});

// simonGame() to start the game pattern sequence
function simonGame() {

  // after gameovers making userClickedPattern empty to start the next pattern after game is over
  userClickedPattern = [];

  // Increasing the level as the game progress
  level++;

  // changing the heading on simon-game.html
  $('.game-page-heading').text('Level ' + level);

  // taking a random value from 0-3 as array is started from 0th index
  var randomGameTile = Math.floor(Math.random() * 4);

  // select the color from btnColors array on the basis of randomGameTile generated
  var randomGameTileColorSelected = btnColors[randomGameTile];

  // pushing the selected color from btnColors to gamePattern which is the game generated pattern
  gamePattern.push(randomGameTileColorSelected);

  // adding the class to the game tile to change the color and play the audio
  $('.game-tile-' + randomGameTileColorSelected).addClass('event-game-tile-' +
  randomGameTileColorSelected);
  new Audio('sounds/' + randomGameTileColorSelected + '.wav').play();

  // removing the class from the game tile to change the color and play the audio
  setTimeout(
    function () {
      $('.game-tile-' + randomGameTileColorSelected).removeClass('event-game-tile-' +
      randomGameTileColorSelected);
    }, 500
  );
}

// On USer Btn click run the anonymous fumction
$('.game-tile').click(function () {

  // selecting the game-tile ID to get the current Color
  userSelectedColor = $(this).attr('id');

  // pushing the selected id from userclick into userClickedPattern array
  userClickedPattern.push(userSelectedColor);

  // playing the sound as per btn clicked by user
  if (userSelectedColor != gamePattern[gamePattern.length - 1] &&
    !gamePattern.includes(userSelectedColor))
    new Audio('sounds/wrong.mp3').play();
  else
    new Audio('sounds/' + userSelectedColor + '.wav').play();

  // animate the btn clicked by user
  animateBtn(userSelectedColor);

  // Now check the userClickedPattern and game generated pattern
  checkAnswer(userClickedPattern.length - 1);

});

// Animation btn function
function animateBtn(userSelectedColor) {
  $('#' + userSelectedColor).addClass('pressed');
  setTimeout(function () {
    $('#' + userSelectedColor).removeClass('pressed');
  });
}

// verify the result from userClickedPattern and gamePattern
function checkAnswer(currentLevel) {

  // if the userClickedPattern data present in gamePattern generated by game
  if (gamePattern[currentLevel] === userClickedPattern[currentLevel]) {

    // if the lenght in both the arrays are equal then proceed with the next pattern
    if (userClickedPattern.length === gamePattern.length) {
      setTimeout(function () {
        simonGame();
      }, 1000);
    }
  } else {
    new Audio('sounds/wrong.mp3').play();
    $('body').addClass('game-over');
    $('.game-page-heading').text('Game Over, Press Any Key to Restart');

    setTimeout(function () {
      $('body').removeClass('game-over');
    }, 200);

    startOver();
  }
}

function startOver() {
  level = 0;
  gamePattern = [];
  started = false;
}
